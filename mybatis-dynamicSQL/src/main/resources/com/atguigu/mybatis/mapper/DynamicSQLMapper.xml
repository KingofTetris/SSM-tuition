<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.mybatis.mapper.DynamicSQLMapper">

    <!--因为*这个符号在正式开发中基本是不可能用到的
        查*等于所有内容都要查，需要大量的计算和内存。
        所以sql都是写出具体的字段。
        但是每次都去写具体的字段非常麻烦，所以mybatis提供了sql标签
        给这些具体字段的集合起别名

        sql标签主要是用来设置sql片段
        使用<include refid="empColumns"/>引用
    -->
    <sql id="empColumns">
        emp_id,emp_name,age,gender,dept_id
    </sql>
<!--    List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByConditionOne" resultType="Emp">
        <!--解决where问题的方案
            1.where后面直接跟上一个恒成立的条件，比如1=1
            然后if里面全部加上and-->
        select <include refid="empColumns"/> from t_emp where 1=1
        <!--直接用Emp的属性方法就可以了-->
        <if test="empName != null and empName != ''">
            and emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
    </select>

    <!--方案2拼接上where标签
     如果没有条件成了，就不会添加
     如果条件成立，但是条件前面有and 会把and 去掉
     但是可以去掉条件前面的and，但是条件后面的and就不行了。
    -->
    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <where>
            <!--直接用Emp的属性方法就可以了-->
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>


    <!--方案3-->
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColumns"/> from t_emp
        <!--trim
        prefix,suffix:在标签中内容前面或者后面指定添加内容
        prefixOverrides suffixOverrides:在标签中内容前面或者后面指定去掉内容
        -->
        <trim prefix="where" prefixOverrides="and">
        <!--直接用Emp的属性方法就可以了-->
        <if test="empName != null and empName != ''">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
        </trim>
    </select>


<!--    List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from
        <where>
            <!--choose,when,otherwise就是if,if else,else-->
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>


<!--    void insertMoreEmp(@Param("emps") List<Emp> emps);-->
    <!--foreach标签，几乎是和if标签一样作为最主要的Mybatis动态SQL标签-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <!--这就有点像前端foreach item就是var-->
        <!--separator 每个数据之间的分隔符 ","-->
        <foreach collection="emps" item="emp" separator=",">
            (null,
             #{emp.empName},
             #{emp.age},
             #{emp.gender},
             null)
        </foreach>
    </insert>

<!--    void deleteMoreEmpByIds(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmpByIds">
        delete from t_emp where
        <!--open close表示循环的开头和结尾符号-->
        <!--<foreach collection="empIds" item="empId" separator="," open="(" close=")">
            &lt;!&ndash;这个取参数值的符号可别忘了&ndash;&gt;
            #{empId}
        </foreach>-->
        <!--用or来实现批量删除，只能说不是正常人的思路-->
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>
</mapper>